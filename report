1.//  View total revenue and number of orders per month.
SELECT 
    DATE_TRUNC('month', order_date) AS month,
    COUNT(DISTINCT order_id) AS total_orders,
    SUM(oi.quantity * oi.unit_price) AS total_revenue
FROM 
    orders o
JOIN 
    order_items oi ON o.order_id = oi.order_id
GROUP BY 
    DATE_TRUNC('month', order_date)
ORDER BY 
    month;

2.// Find the most sold products based on quantity.
SELECT 
    p.product_id,
    p.name AS product_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    order_items oi
JOIN 
    products p ON oi.product_id = p.product_id
GROUP BY 
    p.product_id, p.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;

3.//  Display all orders made by a specific customer.

SELECT 
    c.customer_id,
    c.name AS customer_name,
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.unit_price) AS order_total
FROM 
    customers c
JOIN 
    orders o ON c.customer_id = o.customer_id
JOIN 
    order_items oi ON o.order_id = oi.order_id
WHERE 
    c.customer_id = 101
GROUP BY 
    c.customer_id, c.name, o.order_id, o.order_date
ORDER BY 
    o.order_date DESC;
4.// Identify products running low in inventory.

SELECT 
    product_id,
    name AS product_name,
    stock
FROM 
    products
WHERE 
    stock < 10
ORDER BY 
    stock ASC;

5.// Total payments received, grouped by payment method.



SELECT 
    payment_method,
    COUNT(payment_id) AS total_transactions,
    SUM(amount) AS total_amount
FROM 
    payments
GROUP BY 
    payment_method;

6.// Detect unpaid or pending orders.

SELECT 
    o.order_id,
    o.order_date,
    c.name AS customer_name,
    o.status
FROM 
    orders o
LEFT JOIN 
    payments p ON o.order_id = p.order_id
JOIN 
    customers c ON o.customer_id = c.customer_id
WHERE 
    p.payment_id IS NULL;

7.// Total sales grouped by product category.

SELECT 
    pc.category_name,
    SUM(oi.quantity * oi.unit_price) AS total_sales
FROM 
    order_items oi
JOIN 
    products p ON oi.product_id = p.product_id
JOIN 
    product_categories pc ON p.category_id = pc.category_id
GROUP BY 
    pc.category_name
ORDER BY 
    total_sales DESC;
