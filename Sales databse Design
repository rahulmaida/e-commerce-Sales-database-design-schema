CREATE TABLE product_gender (
  product_gender_id INT PRIMARY KEY,
  gender_name VARCHAR(50)
);

INSERT INTO product_gender (product_gender_id, gender_name) VALUES
  (1, 'Men'),
  (2, 'Women');

-- 2. Brand Table
CREATE TABLE brand (
  brand_id INT PRIMARY KEY,
  brand_name VARCHAR(255)
);

INSERT INTO brand (brand_id, brand_name) VALUES
  (1, 'Zara'),
  (2, 'H&M'),
  (3, 'Uniqlo');

-- 3. Color Table
CREATE TABLE color (
  color_id INT PRIMARY KEY,
  color_name VARCHAR(100)
);

INSERT INTO color (color_id, color_name) VALUES
  (1, 'Green'), (2, 'Black'), (3, 'Beige'), (4, 'Navy'),
  (5, 'Brown'), (6, 'Grey'), (7, 'Camel');

-- 4. Size Option Table
CREATE TABLE size_option (
  size_id INT PRIMARY KEY,
  size_name VARCHAR(20),
  sort_order INT
);

INSERT INTO size_option (size_id, size_name, sort_order) VALUES
  (1, 'XS', 1), (2, 'S', 2), (3, 'M', 3),
  (4, 'L', 4), (5, 'XL', 5);

-- 5. Attribute Table
CREATE TABLE attribute (
  attribute_id INT PRIMARY KEY,
  attribute_name VARCHAR(255)
);

INSERT INTO attribute (attribute_id, attribute_name) VALUES
  (1, 'Material'),
  (2, 'Fit');

-- 6. Attribute Option Table
CREATE TABLE attribute_option (
  attribute_option_id INT PRIMARY KEY,
  attribute_id INT,
  option_name VARCHAR(255),
  FOREIGN KEY (attribute_id) REFERENCES attribute(attribute_id)
);

INSERT INTO attribute_option (attribute_option_id, attribute_id, option_name) VALUES
  (1, 1, 'Cotton'),
  (2, 1, 'Linen'),
  (3, 2, 'Slim'),
  (4, 2, 'Regular');

-- =============================================
-- SECTION 2: MAIN ENTITY TABLES
-- =============================================

-- 1. Product Table
CREATE TABLE product (
  product_id INT PRIMARY KEY,
  product_name VARCHAR(255),
  brand_id INT,
  product_gender_id INT,
  FOREIGN KEY (brand_id) REFERENCES brand(brand_id),
  FOREIGN KEY (product_gender_id) REFERENCES product_gender(product_gender_id)
);

INSERT INTO product (product_id, product_name, brand_id, product_gender_id) VALUES
  (1, 'T-Shirt', 1, 1),
  (2, 'Jeans', 2, 1),
  (3, 'Dress', 2, 2),
  (4, 'Jacket', 3, 1);

-- 2. Product Item Table
CREATE TABLE product_item (
  product_item_id INT PRIMARY KEY,
  product_id INT,
  color_id INT,
  original_price INT,  -- in cents
  sale_price INT,      -- in cents
  size_id INT,
  qty_in_stock INT,
  FOREIGN KEY (product_id) REFERENCES product(product_id),
  FOREIGN KEY (color_id) REFERENCES color(color_id),
  FOREIGN KEY (size_id) REFERENCES size_option(size_id)
);

INSERT INTO product_item (product_item_id, product_id, color_id, original_price, sale_price, size_id, qty_in_stock) VALUES
  (1, 1, 1, 7500, 4900, 3, 100),
  (2, 1, 2, 7500, 7500, 4, 120),
  (3, 1, 3, 7500, 4900, 2, 90),
  (4, 1, 4, 7500, 4900, 5, 50),
  (5, 1, 5, 7500, 4150, 1, 30),
  (6, 1, 6, 7500, 4500, 4, 60),
  (7, 1, 3, 2500, 1500, 2, 70),
  (8, 3, 7, 10000, 2500, 3, 40),
  (9, 4, 6, 3200, 1450, 4, 75);

-- 3. Product Image Table
CREATE TABLE product_image (
  image_id INT PRIMARY KEY,
  product_id INT,
  image_url VARCHAR(255),
  product_item_id INT,
  FOREIGN KEY (product_id) REFERENCES product(product_id),
  FOREIGN KEY (product_item_id) REFERENCES product_item(product_item_id)
);

INSERT INTO product_image (image_id, product_id, image_url, product_item_id) VALUES
  (1, 1, 'img1.jpg', 1),
  (2, 2, 'img2.jpg', 2),
  (3, 3, 'img3.jpg', 3),
  (4, 4, 'img4.jpg', 4);

-- 4. Product Attribute Bridge Table
CREATE TABLE product_attribute (
  product_id INT,
  attribute_id INT,
  attribute_option_id INT,
  FOREIGN KEY (product_id) REFERENCES product(product_id),
  FOREIGN KEY (attribute_id) REFERENCES attribute(attribute_id),
  FOREIGN KEY (attribute_option_id) REFERENCES attribute_option(attribute_option_id)
);

INSERT INTO product_attribute (product_id, attribute_id, attribute_option_id) VALUES
  (1, 1, 1),  -- T-Shirt is Cotton
  (1, 2, 4),  -- T-Shirt has Regular fit
  (2, 1, 2),  -- Jeans is Linen
  (2, 2, 3);  -- Jeans has Slim fit

-- =============================================
-- SECTION 3: SELECT QUERIES FOR TESTING
-- =============================================

-- 1. Product Listing with Color and Size
SELECT
  p.product_id,
  pi.product_item_id,
  p.product_name,
  c.color_name,
  s.size_name,
  pi.original_price / 100 AS original_price,
  pi.sale_price / 100 AS sale_price
FROM product_item pi
INNER JOIN product p ON pi.product_id = p.product_id
INNER JOIN color c ON pi.color_id = c.color_id
INNER JOIN size_option s ON pi.size_id = s.size_id
ORDER BY p.product_name, s.sort_order;

-- 2. Show Product Attributes
SELECT
  pa.product_id,
  a.attribute_name,
  ao.option_name
FROM product_attribute pa
INNER JOIN attribute a ON pa.attribute_id = a.attribute_id
INNER JOIN attribute_option ao ON pa.attribute_option_id = ao.attribute_option_id;

-- 3. Inventory Summary
SELECT
  p.product_name,
  SUM(pi.qty_in_stock) AS total_stock
FROM product p
JOIN product_item pi ON p.product_id = pi.product_id
GROUP BY p.product_name;

-- 4. Price Comparison Query
SELECT
  p.product_name,
  pi.original_price / 100 AS original_price,
  pi.sale_price / 100 AS sale_price,
  ROUND(100.0 * (pi.original_price - pi.sale_price) / pi.original_price, 2) AS discount_percent
FROM product_item pi
JOIN product p ON pi.product_id = p.product_id;
